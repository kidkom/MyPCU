<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL6ymgCYi3EAiHtiAJOIcQB9cFMAi39mAKqehQDUyLAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD57dYAv7CSAJaGZAC2q5USlIhwNI6BawyVinMbfHBTIod8Yhupnocg6N7LAb6x
        lADq28AAAAAAAAAAAADSwZ8A////ALCihzWKe1xnopeAP4J2W6F0Z0uGgXVcU3xvVaCVinR4kodtnKeb
        gh+2qY0d49W7AgAAAAAAAAAAx7eWAZWEYgyglHk3hnpcqnptUKt+c1hkgHZbtoJ3X4Z9cVeWhntilYBz
        V8CPgmVym41tls/CpB4AAAAAAAAAAMO0lAiWh2dxiXxgmoF1WWGAc1mKf3NaqY6DbmF2ak+7mI97Y5KI
        cUOGeV+VkoVqnpuMbqu1poVBAAAAAAAAAADZzbEQsKSJY42BZZF6bVGzgnZcjYF1XaSHfGWTiX9oqYqA
        aYWEeGBglIlzjZOGa66WiGmoopFtVgAAAAAAAAAA3dC3I6ibgI2EdlmqhXlegYF1XJOQh3JvfXFXvJSK
        dG6JfmdzdmpPqIh8ZJiSh2ytnY5wb6aTbz8AAAAAAAAAANnNtBuilHhviHtfiIB0WbWPhW92kYhygYl/
        Z3mFemNyhXpieIB0W6WRhm+enJJ5qberkky+ro4hAAAAAAAAAADNwKAelIVlhot+Y5mJfWRzgXVcq4h9
        ZqaHfGW2em5Us4d8ZJSIfWWljIBoro6CaJyXiGmsuKiGOwAAAAAAAAAAwbSSA6KTdh2aj3dBiX1lep2T
        gGCGe2OMg3hgo4yCa2WGfGSZh31lmYV6X8GThmyRlIRkr9LFqhkAAAAAAAAAAPfu2QeZiWqAmo10hYB0
        Wa5/dFqPgHRak3tuVKeHe2N7in9ne35yWLyOg2qajoJkup6Pb3H///8BAAAAAAAAAAD///8Bp5h6RoN1
        Vb+EeF2YfHBUsoF2XKSQhnGAem9Uv3ptUriIfGOJhnlcpZGEZafHu6EW////AAAAAAAAAAAA////APDn
        0wKWiGlJiXxfpJGFbGOEeF9ph3xlW46DbH+AdFl5kIRqVJaJa4ComXskkX1SAAAAAAAAAAAAAAAAAAAA
        AADPwKEAxbecArqwmRCWinFIf3JXsHdpTrt9cFW7fXBTs4l7XU3z7doCCAAAAPrv1gAAAAAAAAAAAAAA
        AAAAAAAAAAAAANPEpgDNwqoAwLWhCY2BZSx5bE9DgnVZPZOGaxzGuqUD////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMK2ngCRhWgAfW9SAIV4XACViGsAtaaKAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAPgHAADAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAwAAwAcAAOAP
        AAD4HwAA//8AAA==
</value>
  </data>
</root>