<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAD3qUkF+ZQUG/6DACT/oiUNtaJ+AMbS1ADFy8YAyczAAMrSxwDD2dcAxt3gAP8AAAH/oAAY/7QOIP/P
        IgoAAAAA+axGG/uUEJT/ggDC9LJbZNv+/yzk9f4r3uvpK+Xv5yvq+PAr3fXzK+L//yvu+eYz/6gLlP+w
        AK//zBo3AAAAAP+xQiX/lQTG/4AA/uSvYK2/2uV8xtjMe8bYwHvJ3L57y+HCe8bjyHvG69x7z+fTgv+q
        Ddv/qQDp/8YGSwAAAAD/tCkN8KpFeO+kN7Por1JDsMvEH7fNrh+956wewPysHcD/rh3B/7Udu/e7HcPZ
        rSH/ui5w/9Jdq//SGyMAAAAA/xsAALne8z3I6PN65P//E7fWvwC8360ArwCjIa8AoTyvAKI8rwClPLsY
        vCzUAPkD0PngL+j//Xr///8EAAAAAP/EAADK5es91vHufO7//xXkg+4A5JLmAJoAhYeeAIj0oQCN86EA
        j/SyDqe40D/VGtf/0S3u/+l8////BgAAAAAAAAAA3O3nPd/25Xzu//QY5YbnI+OW4DqwFZ6orRGa/6sO
        mf+dAIf/rQidwc08yhza/8kt8f/hfP///wYAAAAAAAAAAOfy5T3j+d986+bsHuKE4Inhl9ze35vZ8eKn
        3P/Resj/ngCH/6wHmsLKOcUc2f/CLfH/2nz///8GAAAAAAAAAADn8OA95/vhfPHo8R/fgt6b3pLZ/+Cf
        2v/mr+D/1YHM95sAg+WsAZmwzzjKGtb/wS3u/dl8////BgAAAAAAAAAA4O/pPeH55Xzq4+8f3X7fmtyL
        2P/dk9f/4Zzb/96R18qbAIVMqQCXN9IZzwfW9MYv7/7ifP///wYAAAAA/9RGAMzl7D3R8Ol83tzzHtt4
        5JPag9r024fX9N6L2PXikd2s////AqYAmQDYKMEA0+3QL+7/7Xz///8FAAAAAP/MUALIz8dE0d3Lge7o
        xhraZvAh2nXgO9t12jzdd9o84HXeKXP/NwC/060Ai/3/ANvdtjbs9eSA//+nCAAAAAD/tD0b/5wYpvyN
        AOLrsk50vN/YOL3ZujbC27M2wdmuNsLVsTfJ2cA7ydzPO9TXvUD/pAej/7MS0P/NFzsAAAAA+6U3I/2P
        AL//fAD1269osbjT2Yi8y72HwMqzh7/IrYe+xa+Hwsq9h8PQz4fH1NWI/54Jzf+lAOH/xQ5JAAAAAPau
        UAv4lx5B/IYAVv+pNSL///8E////A////wP///8D////A////wP///8D/71SB/+bAzz/sxhO/9UzGAAA
        AAD0rFAA9pYeAPqEAAD4qEEA1vn/ANvp8wDh5OIA293YANXY1gDf5+0A3PP/AOzEkAD/mwkA/7MZAP/V
        NAAAAAAAD+EAAAABAAAAAQAAAAEAAAwBAACMAQAAgAEAAIABAACAAQAAgAEAAIAxAAAAcQAAAAEAAAAB
        AAAAAQAA//8AAA==
</value>
  </data>
</root>